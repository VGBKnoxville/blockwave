import time
import requests
from collections import deque
import statistics
import sys

# –ü–∞—Ä—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
PAIRS = ["BTCUSDT", "ETHUSDT", "SOLUSDT", "XRPUSDT"]

# –î–ª–∏–Ω–∞ –æ–∫–Ω–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö
WINDOW = 10
API_URL = "https://api.binance.com/api/v3/klines"

def get_volume(pair, interval="1m", limit=1):
    try:
        resp = requests.get(API_URL, params={"symbol": pair, "interval": interval, "limit": limit}, timeout=5)
        resp.raise_for_status()
        data = resp.json()
        return float(data[-1][5])  # 5-–π –∏–Ω–¥–µ–∫—Å ‚Äî –æ–±—ä–µ–º
    except Exception as e:
        print(f"[ERROR] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–ª—è {pair}: {e}")
        return None

def monitor():
    history = {pair: deque(maxlen=WINDOW) for pair in PAIRS}
    
    print(f"üåä BlockWave –∑–∞–ø—É—â–µ–Ω. –ú–æ–Ω–∏—Ç–æ—Ä–∏–º –ø–∞—Ä—ã: {', '.join(PAIRS)}")
    while True:
        for pair in PAIRS:
            vol = get_volume(pair)
            if vol is None:
                continue

            history[pair].append(vol)

            if len(history[pair]) == WINDOW:
                avg = statistics.mean(history[pair])
                stdev = statistics.pstdev(history[pair])
                
                if stdev > 0 and vol > avg + 3 * stdev:
                    print(f"üö® –í—Å–ø–ª–µ—Å–∫ –æ–±—ä—ë–º–∞ {pair}: {vol:.2f} (—Å—Ä–µ–¥–Ω–µ–µ {avg:.2f}, œÉ={stdev:.2f})")
        
        time.sleep(60)

if __name__ == "__main__":
    try:
        monitor()
    except KeyboardInterrupt:
        print("\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
        sys.exit(0)
